# -*- python -*-
# ex: set filetype=python:

import os
import boto3

from buildbot.plugins import *

def get_default_environment(ssm_client, variable, default):
    value = os.environ.get(variable, default)
    if value.startswith("ssm://"):
        try:
            response = ssm_client.get_parameter(Name=value.replace("ssm://", ""), WithDecryption=True)
            parameter = response.get('Parameter', {})
            return parameter.get('Value', default)
        except:
            return default
    return value

ssm_client = boto3.client('ssm')
c = BuildmasterConfig = {}

worker_name = get_default_environment(ssm_client, "BUILDBOT_WORKER_USERNAME", "example-worker")
c['workers'] = [worker.Worker(worker_name,
                              get_default_environment(ssm_client, "BUILDBOT_WORKER_PASSWORD", "pass"))]

c['protocols'] = {'pb': {'port': os.environ.get("BUILDBOT_WORKER_PORT", 9989)}}

c['change_source'] = []

c['schedulers'] = []
c['schedulers'].append(schedulers.ForceScheduler(
                            name="force",
                            builderNames=["ruby-linux"]))

factory = util.BuildFactory()
factory.addStep(steps.Git(repourl='http://github.com/UnsafePointer/ruby.git', mode='incremental'))
factory.addStep(steps.MakeDirectory(dir="build/build"))
factory.addStep(steps.ShellCommand(command=["cmake", ".."],
                                   workdir="build/build"))
factory.addStep(steps.ShellCommand(command=["make", "-j4"],
                                   workdir="build/build"))

c['builders'] = []
c['builders'].append(
    util.BuilderConfig(name="ruby-linux",
      workernames=[worker_name],
      factory=factory))

c['status'] = []

c['title'] = "ruby"
c['titleURL'] = "https://github.com/UnsafePointer/ruby"

c['buildbotURL'] = get_default_environment(ssm_client, "BUILDBOT_WEB_URL", "http://localhost:8010/")

c['www'] = dict(port=int(get_default_environment(ssm_client, "BUILDBOT_WEB_PORT", "8010")),
                plugins=dict(waterfall_view={}, console_view={}))

admin_username = get_default_environment(ssm_client, "BUILDBOT_ADMIN_USERNAME", "admin")
admin_password = get_default_environment(ssm_client, "BUILDBOT_ADMIN_PASSWORD", "admin")

c['www']['authz'] = util.Authz(
        allowRules = [
            util.AnyEndpointMatcher(role="admins")
        ],
        roleMatchers = [
            util.RolesFromUsername(roles=['admins'], usernames=[admin_username])
        ]
)
c['www']['auth'] = util.UserPasswordAuth([(admin_username, admin_password)])

c['db'] = {
    'db_url' : get_default_environment(ssm_client, "BUILDBOT_DB_URL", "sqlite://").format(**os.environ),
}
